/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M26
 * Generated at: 2017-10-20 07:39:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import cacao.model.vo.*;

public final class adminProductMain_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("cacao.model.vo");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
List<Info> infoList = (List<Info>) request.getAttribute("infolist");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js\"></script>\r\n");
      out.write("<body ng-app=\"myApp\" ng-controller=\"userCtrl\">\r\n");
      out.write("\r\n");
      out.write("<div class=\"w3-container\" style=\"width: 900px;\">\r\n");
      out.write("\r\n");
      out.write("<h3>Users</h3>\r\n");
      out.write("\r\n");
      out.write("<table class=\"w3-table w3-bordered w3-striped\">\r\n");
      out.write("  <tr>\r\n");
      out.write("    <th>상품번호</th>\r\n");
      out.write("    <th>캐릭터종류</th>\r\n");
      out.write("    <th>카테고리종류</th>\r\n");
      out.write("    <th>상품이름</th>\r\n");
      out.write("    <th>가격</th>\r\n");
      out.write("    <th>재고수량</th>\r\n");
      out.write("    <th>색상</th>\r\n");
      out.write("    <th>제조국가</th>\r\n");
      out.write("    <th>이미지개수</th>\r\n");
      out.write("   \t<th>Edit</th>\r\n");
      out.write("  </tr>\r\n");
      out.write("  <tr ng-repeat=\"user in users\">\r\n");
      out.write("    <div style=\"visibility: hidden;\">{{user.change}}</div>\r\n");
      out.write("    <td>{{user.iId}}</td>\r\n");
      out.write("    <td>{{user.iChar}}</td>\r\n");
      out.write("    <td>{{user.iCate}}</td>\r\n");
      out.write("    <td>{{user.iName}}</td>\r\n");
      out.write("    <td>{{user.iCost}}</td>\r\n");
      out.write("    <td>{{user.iCnt}}</td>\r\n");
      out.write("    <td>{{user.iColor}}</td>\r\n");
      out.write("    <td>{{user.iKor}}</td>\r\n");
      out.write("    <td>{{user.iImgcnt}}</td>\r\n");
      out.write("    <td><button class=\"w3-btn w3-ripple\" ng-click=\"editUser(user.id)\">✎편집</button></td>\r\n");
      out.write("    \r\n");
      out.write("  </tr>\r\n");
      out.write("</table>\r\n");
      out.write("<br>\r\n");
      out.write("<button class=\"w3-btn w3-green w3-ripple\" ng-click=\"editUser('new')\">✎ Create New User</button>\r\n");
      out.write("<input type=\"button\" value=\"뒤로가기\" class=\"w3-btn w3-green w3-ripple\" onclick=\"location.href='/Cacao/Admin?cmd=main-page'\"/>\r\n");
      out.write("<button class=\"w3-btn w3-green w3-ripple\" ng-click=\"Register('new')\">Register Image</button>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id=\"hidden\" style=\"float: right;margin-top: -197%;width: 600px;\">\r\n");
      out.write("<form ng-hide=\"hideform\" action=\"/Cacao/Admin?cmd=adminProductMainSave-page\" method=\"post\">\r\n");
      out.write("  <h3 ng-show=\"edit\">Create New User:</h3>\r\n");
      out.write("  <h3 ng-hide=\"edit\">Edit User:</h3>\r\n");
      out.write("    \r\n");
      out.write("  \t<label>상품번호:</label>\r\n");
      out.write("    <input class=\"w3-input w3-border\" name=\"iId\" ng-model=\"iId\"  placeholder=\"상품번호\" >\r\n");
      out.write("  <br>\r\n");
      out.write("  \t<label>캐릭터종류:</label>\r\n");
      out.write("    <select class=\"w3-input w3-border\" ng-model=\"iChar\" name=\"iChar\">\r\n");
      out.write("    <option value=\"라이언\">라이언</option>\r\n");
      out.write("    <option value=\"어피치\">어피치</option>\r\n");
      out.write("    </select>\r\n");
      out.write("  <br>\r\n");
      out.write("  \t<label>카테고리종류:</label>\r\n");
      out.write("    <select class=\"w3-input w3-border\" ng-model=\"iCate\" name=\"iCate\">\r\n");
      out.write("    <option value=\"미니인형\">미니인형</option>\r\n");
      out.write("    <option value=\"신발\">신발</option>\r\n");
      out.write("    <option value=\"노트북악세서리\">노트북악세서리</option>\r\n");
      out.write("    <option value=\"컵텀블러\">컵텀블러</option>\r\n");
      out.write("    </select>\r\n");
      out.write("  <br>\r\n");
      out.write("  \t<label>상품이름:</label>\r\n");
      out.write("    <input class=\"w3-input w3-border\" type=\"text\" ng-model=\"iName\" name=\"iName\" placeholder=\"상품이름\">\r\n");
      out.write("  <br>\r\n");
      out.write("  \t<label>가격:</label>\r\n");
      out.write("    <input class=\"w3-input w3-border\" type=\"text\" ng-model=\"iCost\" name='iCost'  placeholder=\"가격\">\r\n");
      out.write("  <br>\r\n");
      out.write("  \t<label>재고수량:</label>\r\n");
      out.write("    <input class=\"w3-input w3-border\" type=\"text\" ng-model=\"iCnt\" name='iCnt'  placeholder=\"재고수량\">\r\n");
      out.write("  <br>\r\n");
      out.write("  \t<label>색상:</label>\r\n");
      out.write("    <input class=\"w3-input w3-border\" type=\"text\" ng-model=\"iColor\" name='iColor'  placeholder=\"색상\">\r\n");
      out.write("  <br>\r\n");
      out.write("  \t<label>제조국가:</label>\r\n");
      out.write("    <input class=\"w3-input w3-border\" type=\"text\" ng-model=\"iKor\" name='iKor'  placeholder=\"제조국가\">\r\n");
      out.write("  <br>\r\n");
      out.write("  \t<label>이미지개수:</label>\r\n");
      out.write("    <input class=\"w3-input w3-border\" name='iImgcnt' type=\"text\" ng-model=\"iImgcnt\"  placeholder=\"이미지개수\">\r\n");
      out.write("  <br>\r\n");
      out.write("  <input style=\"visibility: hidden;\"class=\"w3-input w3-border\" ng-model=\"change\" id=\"change\" name=\"change\" type=\"text\"> \t\r\n");
      out.write("  <input class=\"w3-btn w3-green w3-ripple\" ng-disabled=\"error || incomplete\" type=\"submit\" value='✔ Save Changes'/>\r\n");
      out.write("</form>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("angular.module('myApp', []).controller('userCtrl', function($scope) {\r\n");
      out.write("$scope.iId = '';\r\n");
      out.write("$scope.iChar = '';\r\n");
      out.write("$scope.iCate = '';\r\n");
      out.write("$scope.iName = '';\r\n");
      out.write("$scope.iCost  = '';\r\n");
      out.write("$scope.iCnt = '';\r\n");
      out.write("$scope.iColor = '';\r\n");
      out.write("$scope.iKor = '';\r\n");
      out.write("$scope.iImgcnt = '';\r\n");
      out.write("$scope.change = '';\r\n");
      out.write("\r\n");
      out.write("$scope.users = [ \r\n");
for(int i=0;i<infoList.size();i++){
      out.write("\r\n");
      out.write("{id:");
      out.print(i+1);
      out.write(",iId:'");
      out.print(infoList.get(i).getiId());
      out.write("',iChar:'");
      out.print(infoList.get(i).getiChar());
      out.write("',iCate:'");
      out.print(infoList.get(i).getiCate());
      out.write("',iName:'");
      out.print(infoList.get(i).getiName());
      out.write("',iCost:'");
      out.print(infoList.get(i).getiCost());
      out.write("',iCnt:'");
      out.print(infoList.get(i).getiCnt());
      out.write("',iColor:'");
      out.print(infoList.get(i).getiColor());
      out.write("',iKor:'");
      out.print(infoList.get(i).getiKor());
      out.write("',iImgcnt:'");
      out.print(infoList.get(i).getiImgcnt());
      out.write("'},\r\n");
}
      out.write("\r\n");
      out.write("];\r\n");
      out.write("$scope.edit = true;\r\n");
      out.write("$scope.error = false;\r\n");
      out.write("$scope.incomplete = false; \r\n");
      out.write("$scope.hideform = true; \r\n");
      out.write("\r\n");
      out.write("$scope.editUser = function(id) {\r\n");
      out.write("  $scope.hideform = false;\r\n");
      out.write("  if (id == 'new') {\r\n");
      out.write("    $scope.edit = true;\r\n");
      out.write("    $scope.incomplete = true;\r\n");
      out.write("    $scope.iId = '';\r\n");
      out.write("    $scope.iChar = '';\r\n");
      out.write("    $scope.iCate = '';\r\n");
      out.write("    $scope.iName = '';\r\n");
      out.write("    $scope.iCost  = '';\r\n");
      out.write("    $scope.iCnt = '';\r\n");
      out.write("    $scope.iColor = '';\r\n");
      out.write("    $scope.iKor = '';\r\n");
      out.write("    $scope.iImgcnt = '';\r\n");
      out.write("    $scope.change = '0';\r\n");
      out.write("    } else {\r\n");
      out.write("    $scope.edit = false;\r\n");
      out.write("    $scope.iId =  $scope.users[id-1].iId;\r\n");
      out.write("    $scope.iChar =  $scope.users[id-1].iChar;\r\n");
      out.write("    $scope.iCate =  $scope.users[id-1].iCate;\r\n");
      out.write("    $scope.iName =  $scope.users[id-1].iName;\r\n");
      out.write("    $scope.iCost  =  $scope.users[id-1].iCost;\r\n");
      out.write("    $scope.iCnt =  $scope.users[id-1].iCnt;\r\n");
      out.write("    $scope.iColor =  $scope.users[id-1].iColor;\r\n");
      out.write("    $scope.iKor =  $scope.users[id-1].iKor;\r\n");
      out.write("    $scope.iImgcnt =  $scope.users[id-1].iImgcnt;\r\n");
      out.write("    $scope.change = '1';\r\n");
      out.write("\r\n");
      out.write("  }\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("$scope.$watch('iId',function() {$scope.test();});\r\n");
      out.write("$scope.$watch('iChar',function() {$scope.test();});\r\n");
      out.write("$scope.$watch('iCate', function() {$scope.test();});\r\n");
      out.write("$scope.$watch('iName', function() {$scope.test();});\r\n");
      out.write("$scope.$watch('iCost',function() {$scope.test();});\r\n");
      out.write("$scope.$watch('iCnt',function() {$scope.test();});\r\n");
      out.write("$scope.$watch('iColor', function() {$scope.test();});\r\n");
      out.write("$scope.$watch('iKor', function() {$scope.test();});\r\n");
      out.write("$scope.$watch('iImgcnt',function() {$scope.test();});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("$scope.test = function() {\r\n");
      out.write(" \r\n");
      out.write("\t  $scope.incomplete = false;\r\n");
      out.write("\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("});    \r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
