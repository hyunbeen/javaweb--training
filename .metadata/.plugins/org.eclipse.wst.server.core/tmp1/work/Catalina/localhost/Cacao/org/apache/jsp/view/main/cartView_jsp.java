/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M26
 * Generated at: 2017-10-20 00:49:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view.main;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import cacao.model.vo.*;
import cacao.service.*;

public final class cartView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("cacao.model.vo");
    _jspx_imports_packages.add("cacao.service");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 
	request.setCharacterEncoding("utf-8");
	
// 	삭제시 사용하기 위한변수
	String change = request.getParameter("change");
	String index = request.getParameter("index");
	
// 전페이지 에서 받아오는 변수
	String cnt = request.getParameter("cnt");
	String price = request.getParameter("price");
	String name = request.getParameter("name");
	String id = request.getParameter("id");
	
	
	int sum = 0;
	int equal = 0;
	Info info = new Info();
	ArrayList<Info> infolist = null;
	infolist = (ArrayList<Info>)session.getAttribute("cart");
	int size = 0;
	
	if(change==null){
// 		일반적인 삽입
		info.setiCnt(cnt);
		info.setiName(name);
		info.setiCost(price);
		info.setiId(id);
		
		if(infolist == null){
			infolist = new ArrayList();
			infolist.add(info);
		}else{
			for(int i=0;i<infolist.size();i++){
				if(infolist.get(i).getiName().equals(name))	{
					infolist.get(i).setiCnt(String.valueOf(Integer.parseInt(infolist.get(i).getiCnt())+Integer.parseInt(cnt)));
					equal = 1;
					break;
				}
			}
			if(equal!=1){
				infolist.add(info);
			}
			
		}
	
	}else if(change.equals("1")){
// 		수량감소
		infolist.get(Integer.parseInt(index)).setiCnt(String.valueOf(Integer.parseInt(infolist.get(Integer.parseInt(index)).getiCnt())-1));
		
	}else if(change.equals("2")){
// 		수량증가
		infolist.get(Integer.parseInt(index)).setiCnt(String.valueOf(Integer.parseInt(infolist.get(Integer.parseInt(index)).getiCnt())+1));
		
	}else if(change.equals("3")){
// 		데이터삭제
		infolist.remove(Integer.parseInt(index));
	}else if(change.equals("4")){
// 		선택삭제
		
		String[] deleteindex = request.getParameterValues("itemcheck");
		
		for(int i=0;i<deleteindex.length;i++){
			infolist.remove(Integer.parseInt(deleteindex[i])-i);
		}
		
	}
	if(infolist==null){
		size = 0;
	}else{
		size = infolist.size();
	}
	session.setAttribute("buylist", infolist);
	session.setAttribute("cart", infolist);
// 	CacaoMainService service = CacaoMainService.getInstance();
// 	infolist = service.selectInfo(infolist);
	

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\" class=\"no-js\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta name=\"keywords\"\r\n");
      out.write("\tcontent=\"one page, business template, single page, onepage, responsive, parallax, creative, business, html5, css3, css3 animation\">\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("\r\n");
      out.write("<title>카카오프렌즈</title>\r\n");
      out.write(" \r\n");
      out.write("<!--\r\n");
      out.write("        Google Fonts\r\n");
      out.write("        ============================================= -->\r\n");
      out.write("<link\r\n");
      out.write("\thref=\"http://fonts.googleapis.com/css?family=Open+Sans:400,300,600,700\"\r\n");
      out.write("\trel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("<!--\r\n");
      out.write("        CSS\r\n");
      out.write("        ============================================= -->\r\n");
      out.write("<!-- Fontawesome -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"/Cacao/css/font-awesome.min.css\">\r\n");
      out.write("<!-- Bootstrap -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"/Cacao/css/bootstrap.min.css\">\r\n");
      out.write("<!-- Fancybox -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"/Cacao/css/jquery.fancybox.css\">\r\n");
      out.write("<!-- owl carousel -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"/Cacao/css/owl.carousel.css\">\r\n");
      out.write("<!-- Animate -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"/Cacao/css/animate.css\">\r\n");
      out.write("<!-- Main Stylesheet -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"/Cacao/css/main.css\">\r\n");
      out.write("<!-- Main Responsive -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"/Cacao/css/responsive.css\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- product페이지 css -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"/Cacao/css/responsive.css\">\r\n");
      out.write("\r\n");
      out.write("<!-- Modernizer Script for old Browsers -->\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".checks {position: relative;}\r\n");
      out.write(".checks input[type=\"checkbox\"] {  /* 실제 체크박스는 화면에서 숨김 */\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  width: 1px;\r\n");
      out.write("  height: 1px;\r\n");
      out.write("  padding: 0;\r\n");
      out.write("  margin: -1px;\r\n");
      out.write("  overflow: hidden;\r\n");
      out.write("  clip:rect(0,0,0,0);\r\n");
      out.write("  border: 0\r\n");
      out.write("}\r\n");
      out.write(".checks input[type=\"checkbox\"] + label {\r\n");
      out.write("  display: inline-block;\r\n");
      out.write("  position: relative;\r\n");
      out.write("  cursor: pointer;\r\n");
      out.write("  -webkit-user-select: none;\r\n");
      out.write("  -moz-user-select: none;\r\n");
      out.write("  -ms-user-select: none;\r\n");
      out.write("}\r\n");
      out.write(".checks input[type=\"checkbox\"] + label:before {  /* 가짜 체크박스 */\r\n");
      out.write("  content: ' ';\r\n");
      out.write("  display: inline-block;\r\n");
      out.write("  width: 21px;  /* 체크박스의 너비를 지정 */\r\n");
      out.write("  height: 21px;  /* 체크박스의 높이를 지정 */\r\n");
      out.write("  line-height: 21px; /* 세로정렬을 위해 높이값과 일치 */\r\n");
      out.write("  margin: -2px 8px 0 0;\r\n");
      out.write("  text-align: center; \r\n");
      out.write("  vertical-align: middle;\r\n");
      out.write("  background: #fafafa;\r\n");
      out.write("  border: 1px solid #cacece;\r\n");
      out.write("  border-radius : 3px;\r\n");
      out.write("  box-shadow: 0px 1px 2px rgba(0,0,0,0.05), inset 0px -15px 10px -12px rgba(0,0,0,0.05);\r\n");
      out.write("}\r\n");
      out.write(".checks input[type=\"checkbox\"] + label:active:before,\r\n");
      out.write(".checks input[type=\"checkbox\"]:checked + label:active:before {\r\n");
      out.write("  box-shadow: 0 1px 2px rgba(0,0,0,0.05), inset 0px 1px 3px rgba(0,0,0,0.1);\r\n");
      out.write("}\r\n");
      out.write(".checks input[type=\"checkbox\"]:checked + label:before {  /* 체크박스를 체크했을때 */ \r\n");
      out.write("  content: '\\2714';  /* 체크표시 유니코드 사용 */\r\n");
      out.write("  color: #99a1a7;\r\n");
      out.write("  text-shadow: 1px 1px #fff;\r\n");
      out.write("  background: #e9ecee;\r\n");
      out.write("  border-color: #adb8c0;\r\n");
      out.write("  box-shadow: 0px 1px 2px rgba(0,0,0,0.05), inset 0px -15px 10px -12px rgba(0,0,0,0.05), inset 15px 10px -12px rgba(255,255,255,0.1);\r\n");
      out.write("}\r\n");
      out.write(".btn {\r\n");
      out.write("  background-color: #CCFFFF;\r\n");
      out.write("  border: 0;\r\n");
      out.write("  font-family: 'Open Sans', sans-serif;\r\n");
      out.write("  \r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("var check_arr = []; //check된 배열\r\n");
      out.write("// 수량체크 이벤트\r\n");
      out.write("$(function(){\r\n");
      out.write("\t$('input[name=\"plus\"]').each(function(){\r\n");
      out.write("\t\t$(this).click(function(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\tvar data =  $(this).parent().find('input.cnt').val();\r\n");
      out.write("\t\t\tvar index = $(this).parent().find('input.index').val();\r\n");
      out.write("\t\t\t$(this).parent().find('input.cnt').val(parseInt($(this).parent().find('input.cnt').val()) + 1);\r\n");
      out.write("\t\t\t$(this).parent().parent().find('.changecnt').text(parseInt($(this).parent().parent().find('.changecnt').text())+1);\r\n");
      out.write("\t\t\tvar sum = $(this).parent().parent().parent().parent().find('.sum').text();\r\n");
      out.write("\t\t\tvar allsum = $(this).parent().parent().parent().parent().find('.allsum').text();\r\n");
      out.write("\t\t\tvar cost = $(this).parent().parent().find('.cost').text();\r\n");
      out.write("\t\t\t$(this).parent().parent().parent().parent().find('.sum').html(\"<h4>\"+(parseInt(sum)+parseInt(cost))+\"</h4>\");\r\n");
      out.write(" \t\t\t$(this).parent().parent().parent().parent().find('.allsum').html(\"<h4>\"+(parseInt(sum)+parseInt(cost)+2500)+'원'+\"</h4>\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype : 'post',\r\n");
      out.write("\t\t\t\turl : 'Index.jsp',\r\n");
      out.write("\t\t\t\tdata : { 'index' : index},\r\n");
      out.write("\t\t\t\tdataType : 'text',\r\n");
      out.write("\t\t\t\tsuccess : function(data){\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror : function(err){\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$('input[name=\"minus\"]').each(function(){\r\n");
      out.write("\t\t$(this).click(function(){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar data =  $(this).parent().find('input.cnt').val();\r\n");
      out.write("\t\t\tvar index = $(this).parent().find('input.index').val();\r\n");
      out.write("\t\t\t$(this).parent().find('input.cnt').val(parseInt($(this).parent().find('input.cnt').val()) - 1);\r\n");
      out.write("\t\t\t$(this).parent().parent().find('.changecnt').html(\"<h4>\"+(parseInt($(this).parent().parent().find('.changecnt').text())-1)+\"</h4>\");\r\n");
      out.write("\t\t\tvar sum = $(this).parent().parent().parent().parent().find('.sum').text();\r\n");
      out.write("\t\t\tvar allsum = $(this).parent().parent().parent().parent().find('.allsum').text();\r\n");
      out.write("\t\t\tvar cost = $(this).parent().parent().find('.cost').text();\r\n");
      out.write("\t\t\t$(this).parent().parent().parent().parent().find('.sum').html(\"<h4>\"+(parseInt(sum)-parseInt(cost))+\"</h4>\");\r\n");
      out.write(" \t\t\t$(this).parent().parent().parent().parent().find('.allsum').html(\"<h4>\"+(parseInt(sum)-parseInt(cost)+2500)+'원'+\"</h4>\");\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype : 'post',\r\n");
      out.write("\t\t\t\turl : 'Indexminus.jsp',\r\n");
      out.write("\t\t\t\tdata : { 'index' : index},\r\n");
      out.write("\t\t\t\tdataType : 'text',\r\n");
      out.write("\t\t\t\tsuccess : function(data){\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror : function(err){\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("// \t모든선택 클릭시 이벤트\r\n");
      out.write("\t $('input[name=\"all\"]').change(function(){\r\n");
      out.write("\t        if($(this).is(\":checked\")){\r\n");
      out.write("\t        \t$('input[name=\"itemcheck\"]').each(function(){\r\n");
      out.write("\t        \t\t$(this).prop(\"checked\",true);\r\n");
      out.write("\t\t        });\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t            \r\n");
      out.write("\t        }else{\r\n");
      out.write("\t        \t$('input[name=\"itemcheck\"]').each(function(){\r\n");
      out.write("\t        \t\t$(this).prop(\"checked\",false);\r\n");
      out.write("\t\t        });\r\n");
      out.write("\t\t        \r\n");
      out.write("\t          \r\n");
      out.write("\t        }\r\n");
      out.write("\t    });\r\n");
      out.write("// \t 모든 선택  해제  이벤트\r\n");
      out.write("\t $('input[name=\"itemcheck\"]').each(function(){\r\n");
      out.write("\t\t$(this).change(function(){\r\n");
      out.write("\t\t\tif(!$(this).is(\":checked\")){\r\n");
      out.write("\t        \r\n");
      out.write("\t\t\t\t$('input[name=\"all\"]').prop(\"checked\",false);\r\n");
      out.write("\t        }\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("     });\r\n");
      out.write("// 선택 데이터 삭제\r\n");
      out.write("\t $('input[name=\"itemcheck\"]').each(function(){\r\n");
      out.write("\t\t\t$(this).change(function(){\r\n");
      out.write("\t\t\t\tif(!$(this).is(\":checked\")){\r\n");
      out.write("\t\t        \r\n");
      out.write("\t\t\t\t\t$('input[name=\"all\"]').prop(\"checked\",false);\r\n");
      out.write("\t\t        }\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t \t});\r\n");
      out.write("\t$('#buy').click(function(){\r\n");
      out.write("\tif($('.detail').length==0){\r\n");
      out.write("\t\talert(\"구매할 내용이 없습니다\");\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\t \t location.href=\"/Cacao/Order?cmd=main-page\"\r\n");
      out.write("\t};\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"/Cacao/js/vendor/modernizr-2.6.2.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/view/include/header.jsp", out, false);
      out.write("\r\n");
      out.write("\t<section id=\"sec\" style=\"height=5000px;margin-top:20%;margin-left:10%;margin-right:25%\" >\r\n");
      out.write("\t\r\n");
      out.write("\t<div id=\"search\">\r\n");
      out.write("\t<h4>총 ");
      out.print(size );
      out.write("개의 상품이 조회 되었습니다.</h4> \r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"all\" style=\"float:right;margin-left:2%\">\r\n");
      out.write("\t<form method='post'>\r\n");
      out.write("\t<input type=\"hidden\" value='4' name='change'/>\r\n");
      out.write("\t<input class=\"checks\" type=\"checkbox\" name=\"all\"/>전체 선택<input value='선택 삭제하기' class=\"btn\" type=\"submit\" value=\"선택 삭제하기\" style=\"margin-left:30px;margin-top:-4px;float:right\"/></br>\r\n");
      out.write("\t\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("<!-- \t상품조회 -->\r\n");
      out.write("\t<div id=product style=\"margin-top : 10%\">\r\n");
      out.write("\t");

		 
		if((ArrayList<Info>)session.getAttribute("cart")!=null){
			infolist = (ArrayList<Info>)session.getAttribute("cart");
		for(int i=0; i < infolist.size(); i++) { 
			Info item = (Info) infolist.get(i); 
			sum = sum + Integer.parseInt(item.getiCnt()) * Integer.parseInt(item.getiCost());
	
      out.write("\t\r\n");
      out.write("\t\t\t<div class=\"detail\">\r\n");
      out.write("\t\t\t<div class=choose>\r\n");
      out.write("\t\t\t<input class=\"checks\" type=\"checkbox\" value=");
      out.print(i);
      out.write(" name=\"itemcheck\" style=\"float:left;margin-right:20px\"/>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=img style=\"float:left;margin-bottom:20px;border-color:black;\" >\r\n");
      out.write("\t\t\t<img src=\"/Cacao/img/product/all/");
      out.print( item.getiId() );
      out.write("00.jpg\" style=\"width:200px;height:250px\" /> \r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=information style=\"margin-bottom:3.5%;margin-top:2%\">\r\n");
      out.write("\t\t\t</br>\r\n");
      out.write("\t\t\t상품이름 : ");
      out.print( item.getiName() );
      out.write("\r\n");
      out.write("\t\t\t</br>\r\n");
      out.write("\t\t\t</br>\r\n");
      out.write("\t\t\t주문개수 : <div class='changecnt'>");
      out.print( item.getiCnt() );
      out.write("</div>\r\n");
      out.write("\t\t\t</br>\r\n");
      out.write("\t\t\t</br>\r\n");
      out.write("\t\t\t금액 : <div class='cost'>");
      out.print( item.getiCost() );
      out.write("</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class='cancel' style=\"float:left;margin-left:95%;margin-top:-20%;margin-right:30%\">\r\n");
      out.write("\t\t\t<a href=\"/Cacao/view/main/cartView.jsp?change=3&index=");
      out.print(i);
      out.write("\"><input type='button' class='btn' value=\"취소\"/></a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=number style=\"float:left;margin-left:68%\">\r\n");
      out.write("\t\t\t<input type='button' class='btn' name='minus'  value=\"-\"/>\r\n");
      out.write("\t\t\t<input type='text' class=\"cnt\"  value='");
      out.print(item.getiCnt());
      out.write("'/>\r\n");
      out.write("\t\t\t<input type='button' class='btn' name= 'plus' value=\"+\"/>\r\n");
      out.write("\t\t\t<input type='hidden' class='index' value='");
      out.print(i);
      out.write("'/>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t</br>\r\n");
      out.write("\t\t\t</br>\r\n");
      out.write("\t\t\t</br>\r\n");
      out.write("\t\t\t</br>\r\n");
      out.write("\t\t\t</br>\r\n");
      out.write("\t\t\t</br>\r\n");
      out.write("\t\t\t</br>\r\n");
      out.write("\t\t\t</br>\r\n");
      out.write("\t\t\t<hr/>\r\n");
      out.write("\t\t\t</br>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");

		
} 	}

      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("<!-- \t합계창         -->\r\n");
      out.write("\t<div>\r\n");
      out.write("\t<div style=\"margin-left:50%\"><h4>장바구니 합계 : </h4></div>                \r\n");
      out.write("\t<div style=\"float: left;margin-left:90%;margin-top:-4.5%;\"class='sum'><h4>");
      out.print(sum );
      out.write("</h4></div><div style=\"float: right;margin-top:-4.5%\"><h4>원</h4></div></h4></br>\r\n");
      out.write("\t<div style=\"margin-top:-2.5%;margin-left:50%\"><h4>배송비 : </h4></div>                     \r\n");
      out.write("\t<div style=\"float:right;margin-top:-4%\"><h4>2500원</h4></div>                                                         \r\n");
      out.write("\t<div style=\"margin-left:50%\"><h4>총 결제 금액 : </h4></div>\r\n");
      out.write("\t<div class='allsum' style=\"float:right;margin-top:-4%\"><h4>");
      out.print(sum+2500 );
      out.write("원</h4></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<br/>\r\n");
      out.write("\t<br/>\r\n");
      out.write("\t<br/>\r\n");
      out.write("\t<hr/>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t</section>\r\n");
      out.write("\t\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/view/include/cartbuy.jsp", out, false);
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/view/include/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
