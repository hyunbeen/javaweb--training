/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M26
 * Generated at: 2017-10-23 08:53:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._5_005fpractice;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class phonelist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");

response.setHeader("cache-control","no-cache"); 

List<String[]> phoneDb = (List<String[]>) session.getAttribute("phoneDb");
String id="";
if(phoneDb==null)
{	
	id="p1";
}else{
	id = "p"+String.valueOf(phoneDb.size()+1);
}
request.setCharacterEncoding("UTF-8");
String pname = request.getParameter("pname");
String text = request.getParameter("text");
String pcolor = request.getParameter("pcolor");
String pcompany = request.getParameter("pcompany");
String pprice = request.getParameter("pprice");



String[] product = {id,pname,text,pcolor,pcompany,pprice};

if(phoneDb==null){
	phoneDb = new ArrayList<String[]>();
	if(pname!=null){
		phoneDb.add(product);
	}
	
}else{
	if(pname!=null){
		phoneDb.add(product);
	}
}
session.setAttribute("phoneDb",phoneDb);

int currentPage = 1;
int limit = 4;
int start = (currentPage-1) * limit;
int totalPage = phoneDb.size() / limit;
if(phoneDb.size()%limit != 0) totalPage++;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>jQuery Mobile</title> \r\n");
      out.write("\t\t<meta charset=\"euc-kr\" /> \t\r\n");
      out.write("\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no\"/>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<link rel=\"shortcut icon\" href=\"../image/icon.png\">\r\n");
      out.write("\t\t<link rel=\"apple-touch-icon\" href=\"../image/icon.png\"> \r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"../jQueryLibs/jquery.mobile-1.4.5.css\" />\r\n");
      out.write("\t\t<script src=\"../jQueryLibs/jquery-1.11.0.min.js\"></script>\t\r\n");
      out.write("\t\t<script src=\"../jQueryLibs/jquery.mobile-1.4.5.min.js\"></script>\t\r\n");
      out.write("\r\n");
      out.write("\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\tfunction btnHide(){\r\n");
      out.write("\t\t\tif($('#home').attr('data-login')=='ok'){\r\n");
      out.write("\t\t\t\t$('#btnLogin').hide();\r\n");
      out.write("\t\t\t\t$('#btnLogout').show();\r\n");
      out.write("\t\t\t\t$('#btnPhoneList').attr('href','phonelist.jsp?currentPage=1');\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t$('#btnLogin').show();\r\n");
      out.write("\t\t\t$('#btnLogout').hide();\r\n");
      out.write("\t\t\t$('#btnPhoneList').attr('href','#');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t$(document).bind('pagebeforeshow',function(evt){\r\n");
      out.write("\t\t\tbtnHide();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tfunction logout(){\r\n");
      out.write("\t\t\t$('#home').attr('data-login','');\r\n");
      out.write("\t\t\tbtnHide();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"phonelist\" data-role=\"page\" data-theme=\"a\">\r\n");
      out.write("\t<div data-role=\"header\" data-position=\"fixed\" data-theme=\"a\">\r\n");
      out.write("\t\t<h1>폰 목록</h1>\r\n");
      out.write("\t\t");
if(currentPage > 1) {
      out.write("\r\n");
      out.write("\t\t\t\t<a href=\"phonelist.jsp?currentPage=");
      out.print(currentPage-1);
      out.write("\"\r\n");
      out.write("\t\t\t\t\tdata-role=\"button\"\r\n");
      out.write("\t\t\t\t\tdata-icon=\"arrow-l\"\r\n");
      out.write("\t\t\t\t\tdata-direction=\"reverse\">이전</a>\r\n");
      out.write("\t\t");
}
      out.write("\r\n");
      out.write("\t\t");
if(currentPage < totalPage) {
      out.write("\r\n");
      out.write("\t\t\t\t<a href=\"phonelist.jsp?currentPage=");
      out.print(currentPage+1);
      out.write("\"\r\n");
      out.write("\t\t\t\t\tdata-role=\"button\"\r\n");
      out.write("\t\t\t\t\tdata-icon=\"arrow-r\"\r\n");
      out.write("\t\t\t\t\tdata-iconpos=\"right\"\r\n");
      out.write("\t\t\t\t\tclass=\"ui-btn-right\">다음</a>\r\n");
      out.write("\t\t");
}
      out.write("\r\n");
      out.write("\t</div>  \r\n");
      out.write("\t\r\n");
      out.write("\t<div data-role=\"content\">\r\n");
      out.write("\t\t<ul data-role=\"listview\">\r\n");
      out.write("\t\t\t");
for(int i=start; i<(start+limit) && i<phoneDb.size(); i++) {
      out.write("\r\n");
      out.write("\t\t\t\t\t<li>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"phonedetail.jsp?pno=");
      out.print(phoneDb.get(i)[0]);
      out.write("&currentPage=");
      out.print(currentPage);
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td style=\"padding-right: 5px\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<img src=\"../image/");
      out.print(phoneDb.get(i)[2]);
      out.write("\" \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tstyle=\"width:30px; height:50px\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td style=\"padding-left: 5px\">");
      out.print(phoneDb.get(i)[1]);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t");
}
      out.write("\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\t<div data-role=\"footer\" data-position=\"fixed\" data-theme=\"a\">\r\n");
      out.write("    \t<div data-role=\"navbar\">\r\n");
      out.write("    \t\t<ul>\r\n");
      out.write("\t\t\t\t<li><a href=\"#home\" \r\n");
      out.write("\t\t\t\t\t\tdata-icon=\"home\" \r\n");
      out.write("\t\t\t\t\t\tdata-transition=\"slide\" \r\n");
      out.write("\t\t\t\t\t\tdata-direction=\"reverse\">앱홈</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"phonesaveform.jsp\" \r\n");
      out.write("\t\t\t\t\t\tdata-icon=\"plus\" \r\n");
      out.write("\t\t\t\t\t\tdata-transition=\"slide\">폰등록</a></li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
