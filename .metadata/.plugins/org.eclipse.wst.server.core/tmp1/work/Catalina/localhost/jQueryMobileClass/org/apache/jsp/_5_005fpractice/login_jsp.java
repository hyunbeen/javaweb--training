/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M26
 * Generated at: 2017-10-23 06:45:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._5_005fpractice;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.sql.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=euc-kr");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

String uid = request.getParameter("uid");
String upassword = request.getParameter("upassword");
boolean login = false;
String 	dbDriver	=	"oracle.jdbc.driver.OracleDriver";
String		dbUrl		=	"jdbc:oracle:thin:@192.168.0.124:1521:orcl";
String		dbUser		=	"scott";
String		dbPass		=	"tiger";
Class.forName( dbDriver );
Connection con = DriverManager.getConnection(dbUrl, dbUser, dbPass);
String sql = "select * from emp where ename=? and empno=?";
PreparedStatement ps = con.prepareStatement(sql);
ps.setString(1, uid);
ps.setInt(2, Integer.parseInt(upassword));
ResultSet rs = ps.executeQuery();

if(rs.next()){
	login = true;
}else{
	login = false;
}



      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id=\"login\" data-role=\"page\" data-theme=\"a\">\r\n");
      out.write("\t<div data-role=\"header\" data-theme=\"a\">\r\n");
      out.write("\t\t<h1>로그인 결과</h1>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<div data-role=\"content\">\r\n");
      out.write("\t\t");
if(login) {
      out.write("\r\n");
      out.write("\t\t\t\t<center>\r\n");
      out.write("\t\t\t\t\t<h3>로그인 성공</h3>\r\n");
      out.write("\t\t\t\t\t<a\thref=\"#home\" \r\n");
      out.write("\t\t\t\t\t\tdata-icon=\"home\"\r\n");
      out.write("\t\t\t\t\t\tdata-role=\"button\"\r\n");
      out.write("\t\t\t\t\t\tdata-inline=\"true\"\r\n");
      out.write("\t\t\t\t\t\tdata-direction=\"reverse\">앱홈</a>\r\n");
      out.write("\t\t\t\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\t\t\t\t$(\"#home\").attr(\"data-login\", \"ok\");\r\n");
      out.write("\t\t\t\t\t</script>\r\n");
      out.write("\t\t\t\t</center>\r\n");
      out.write("\t\t");
} else {
      out.write("\r\n");
      out.write("\t\t\t\t<center>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<h3>아이디와 패스워드가 틀림</h3>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"ui-grid-a\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"ui-block-a\">\r\n");
      out.write("\t\t\t\t\t\t\t<a\thref=\"loginform.html\" \r\n");
      out.write("\t\t\t\t\t\t\t\tdata-role=\"button\"\r\n");
      out.write("\t\t\t\t\t\t\t\tdata-icon=\"gear\"\r\n");
      out.write("\t\t\t\t\t\t\t\tdata-direction=\"reverse\">로그인폼</a>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"ui-block-b\">\r\n");
      out.write("\t\t\t\t\t\t\t<a\thref=\"#home\" \r\n");
      out.write("\t\t\t\t\t\t\t\tdata-icon=\"home\"\r\n");
      out.write("\t\t\t\t\t\t\t\tdata-role=\"button\"\r\n");
      out.write("\t\t\t\t\t\t\t\tdata-direction=\"reverse\">앱홈</a>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</center>\r\n");
      out.write("\t\t");
}
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
